name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types:
      - released

  workflow_dispatch:

jobs:

  test-fe:
    name: front-end
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
          cd fe
          yarn install --frozen-lockfile
          yarn test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: ./fe/coverage/coverage-final.json
          fail_ci_if_error: true
          verbose: true

  test-be:
    name: back-end
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
          cd be
          yarn install --frozen-lockfile
          yarn test:coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: ./be/coverage/coverage-final.json
          fail_ci_if_error: true
          verbose: true

  build-fe:
    name: build-fe
    needs: test-fe
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create docker tag variable
        run: |
          chmod u+x "${GITHUB_WORKSPACE}/.github/docker-tag.sh"
          "${GITHUB_WORKSPACE}/.github/docker-tag.sh" "${GITHUB_WORKSPACE}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: fe
          push: true
          tags: jscdroiddev/full-stack-app-fe:${{ env.DOCKER_TAG }}

  build-be:
    name: build-be
    needs: test-be
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create docker tag variable
        run: |
          chmod u+x "${GITHUB_WORKSPACE}/.github/docker-tag.sh"
          "${GITHUB_WORKSPACE}/.github/docker-tag.sh" "${GITHUB_WORKSPACE}"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: be
          push: true
          tags: jscdroiddev/full-stack-app-be:${{ env.DOCKER_TAG }}
  deploy:
    needs: [build-fe, build-be]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'released'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Remote deploy
        run: |
          chmod u+x "${GITHUB_WORKSPACE}/.github/docker-deploy.sh"
          "${GITHUB_WORKSPACE}/.github/docker-deploy.sh" "${{ secrets.SERVER_DB_PASSWORD }}" "${{ secrets.DEPLOY_KEY }}" "${{ secrets.DEPLOY_KNOWN_HOST }}" "${{ secrets.DEPLOY_USERNAME }}" "${{ secrets.DEPLOY_SERVER }}" "${{ env.DOCKER_TAG }}"

      - name: Deploy database
        run: |
          chmod u+x "${GITHUB_WORKSPACE}/.github/db-update.sh"
          "${GITHUB_WORKSPACE}/.github/db-update.sh" "${{ secrets.DEPLOY_USERNAME }}" "${{ secrets.DEPLOY_SERVER }}" "my_user" "${{ secrets.SERVER_DB_PASSWORD }}" "my_app"
